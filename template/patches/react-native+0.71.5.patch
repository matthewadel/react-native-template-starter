diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts b/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
index 5bc4318..0e1ee4a 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
@@ -8,22 +8,22 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {TimerMixin} from '../../../types/private/TimerMixin';
+import { Constructor } from '../../../types/private/Utilities';
+import { TimerMixin } from '../../../types/private/TimerMixin';
 import {
   HostComponent,
   NativeMethods,
 } from '../../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {TextStyle} from '../../StyleSheet/StyleSheetTypes';
+import { ColorValue, StyleProp } from '../../StyleSheet/StyleSheet';
+import { TextStyle } from '../../StyleSheet/StyleSheetTypes';
 import {
   NativeSyntheticEvent,
   NativeTouchEvent,
   TargetedEvent,
 } from '../../Types/CoreEventTypes';
-import {EventEmitter} from '../../vendor/emitter/EventEmitter';
-import {AccessibilityProps} from '../View/ViewAccessibility';
-import {ViewProps} from '../View/ViewPropTypes';
+import { EventEmitter } from '../../vendor/emitter/EventEmitter';
+import { AccessibilityProps } from '../View/ViewAccessibility';
+import { ViewProps } from '../View/ViewPropTypes';
 
 export type KeyboardType =
   | 'default'
@@ -88,7 +88,7 @@ type DataDetectorTypes =
  * components re-render.
  */
 export interface DocumentSelectionState extends EventEmitter {
-  new (anchor: number, focus: number): DocumentSelectionState;
+  new(anchor: number, focus: number): DocumentSelectionState;
 
   /**
    * Apply an update to the state. If either offset value has changed,
@@ -127,11 +127,11 @@ export interface TextInputIOSProps {
    * When the clear button should appear on the right side of the text view
    */
   clearButtonMode?:
-    | 'never'
-    | 'while-editing'
-    | 'unless-editing'
-    | 'always'
-    | undefined;
+  | 'never'
+  | 'while-editing'
+  | 'unless-editing'
+  | 'always'
+  | undefined;
 
   /**
    * If true, clears the text field automatically when editing begins
@@ -238,35 +238,35 @@ export interface TextInputIOSProps {
    *
    */
   textContentType?:
-    | 'none'
-    | 'URL'
-    | 'addressCity'
-    | 'addressCityAndState'
-    | 'addressState'
-    | 'countryName'
-    | 'creditCardNumber'
-    | 'emailAddress'
-    | 'familyName'
-    | 'fullStreetAddress'
-    | 'givenName'
-    | 'jobTitle'
-    | 'location'
-    | 'middleName'
-    | 'name'
-    | 'namePrefix'
-    | 'nameSuffix'
-    | 'nickname'
-    | 'organizationName'
-    | 'postalCode'
-    | 'streetAddressLine1'
-    | 'streetAddressLine2'
-    | 'sublocality'
-    | 'telephoneNumber'
-    | 'username'
-    | 'password'
-    | 'newPassword'
-    | 'oneTimeCode'
-    | undefined;
+  | 'none'
+  | 'URL'
+  | 'addressCity'
+  | 'addressCityAndState'
+  | 'addressState'
+  | 'countryName'
+  | 'creditCardNumber'
+  | 'emailAddress'
+  | 'familyName'
+  | 'fullStreetAddress'
+  | 'givenName'
+  | 'jobTitle'
+  | 'location'
+  | 'middleName'
+  | 'name'
+  | 'namePrefix'
+  | 'nameSuffix'
+  | 'nickname'
+  | 'organizationName'
+  | 'postalCode'
+  | 'streetAddressLine1'
+  | 'streetAddressLine2'
+  | 'sublocality'
+  | 'telephoneNumber'
+  | 'username'
+  | 'password'
+  | 'newPassword'
+  | 'oneTimeCode'
+  | undefined;
 
   /**
    * If false, scrolling of the text view will be disabled. The default value is true. Only works with multiline={true}
@@ -326,44 +326,44 @@ export interface TextInputAndroidProps {
    * - `off`
    */
   autoComplete?:
-    | 'birthdate-day'
-    | 'birthdate-full'
-    | 'birthdate-month'
-    | 'birthdate-year'
-    | 'cc-csc'
-    | 'cc-exp'
-    | 'cc-exp-day'
-    | 'cc-exp-month'
-    | 'cc-exp-year'
-    | 'cc-number'
-    | 'email'
-    | 'gender'
-    | 'name'
-    | 'name-family'
-    | 'name-given'
-    | 'name-middle'
-    | 'name-middle-initial'
-    | 'name-prefix'
-    | 'name-suffix'
-    | 'password'
-    | 'password-new'
-    | 'postal-address'
-    | 'postal-address-country'
-    | 'postal-address-extended'
-    | 'postal-address-extended-postal-code'
-    | 'postal-address-locality'
-    | 'postal-address-region'
-    | 'postal-code'
-    | 'street-address'
-    | 'sms-otp'
-    | 'tel'
-    | 'tel-country-code'
-    | 'tel-national'
-    | 'tel-device'
-    | 'username'
-    | 'username-new'
-    | 'off'
-    | undefined;
+  | 'birthdate-day'
+  | 'birthdate-full'
+  | 'birthdate-month'
+  | 'birthdate-year'
+  | 'cc-csc'
+  | 'cc-exp'
+  | 'cc-exp-day'
+  | 'cc-exp-month'
+  | 'cc-exp-year'
+  | 'cc-number'
+  | 'email'
+  | 'gender'
+  | 'name'
+  | 'name-family'
+  | 'name-given'
+  | 'name-middle'
+  | 'name-middle-initial'
+  | 'name-prefix'
+  | 'name-suffix'
+  | 'password'
+  | 'password-new'
+  | 'postal-address'
+  | 'postal-address-country'
+  | 'postal-address-extended'
+  | 'postal-address-extended-postal-code'
+  | 'postal-address-locality'
+  | 'postal-address-region'
+  | 'postal-code'
+  | 'street-address'
+  | 'sms-otp'
+  | 'tel'
+  | 'tel-country-code'
+  | 'tel-national'
+  | 'tel-device'
+  | 'username'
+  | 'username-new'
+  | 'off'
+  | undefined;
 
   /**
    * When provided it will set the color of the cursor (or "caret") in the component.
@@ -389,12 +389,12 @@ export interface TextInputAndroidProps {
    * - `yesExcludeDescendants` - this view is important for autofill but its children aren't
    */
   importantForAutofill?:
-    | 'auto'
-    | 'no'
-    | 'noExcludeDescendants'
-    | 'yes'
-    | 'yesExcludeDescendants'
-    | undefined;
+  | 'auto'
+  | 'no'
+  | 'noExcludeDescendants'
+  | 'yes'
+  | 'yesExcludeDescendants'
+  | undefined;
 
   /**
    * When false, if there is a small amount of space available around a text input (e.g. landscape orientation on a phone),
@@ -465,7 +465,7 @@ export interface TextInputFocusEventData extends TargetedEvent {
  * @see TextInputProps.onScroll
  */
 export interface TextInputScrollEventData {
-  contentOffset: {x: number; y: number};
+  contentOffset: { x: number; y: number };
 }
 
 /**
@@ -497,7 +497,7 @@ export interface TextInputChangeEventData extends TargetedEvent {
  * @see TextInputProps.onContentSizeChange
  */
 export interface TextInputContentSizeChangeEventData {
-  contentSize: {width: number; height: number};
+  contentSize: { width: number; height: number };
 }
 
 /**
@@ -520,7 +520,7 @@ export interface TextInputSubmitEditingEventData {
 export interface TextInputTextInputEventData {
   text: string;
   previousText: string;
-  range: {start: number; end: number};
+  range: { start: number; end: number };
 }
 
 /**
@@ -528,9 +528,9 @@ export interface TextInputTextInputEventData {
  */
 export interface TextInputProps
   extends ViewProps,
-    TextInputIOSProps,
-    TextInputAndroidProps,
-    AccessibilityProps {
+  TextInputIOSProps,
+  TextInputAndroidProps,
+  AccessibilityProps {
   /**
    * Specifies whether fonts should scale to respect Text Size accessibility settings.
    * The default is `true`.
@@ -618,15 +618,15 @@ export interface TextInputProps
    * Callback that is called when the text input is blurred
    */
   onBlur?:
-    | ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when the text input's text changes.
    */
   onChange?:
-    | ((e: NativeSyntheticEvent<TextInputChangeEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputChangeEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when the text input's text changes.
@@ -634,6 +634,8 @@ export interface TextInputProps
    */
   onChangeText?: ((text: string) => void) | undefined;
 
+  letterSpacing?: number
+
   /**
    * Callback that is called when the text input's content size changes.
    * This will be called with
@@ -642,15 +644,15 @@ export interface TextInputProps
    * Only called for multiline text inputs.
    */
   onContentSizeChange?:
-    | ((e: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when text input ends.
    */
   onEndEditing?:
-    | ((e: NativeSyntheticEvent<TextInputEndEditingEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputEndEditingEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when a touch is engaged.
@@ -661,29 +663,29 @@ export interface TextInputProps
    * Callback that is called when a touch is released.
    */
   onPressOut?:
-    | ((e: NativeSyntheticEvent<NativeTouchEvent>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<NativeTouchEvent>) => void)
+  | undefined;
 
   /**
    * Callback that is called when the text input is focused
    */
   onFocus?:
-    | ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when the text input selection is changed.
    */
   onSelectionChange?:
-    | ((e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when the text input's submit button is pressed.
    */
   onSubmitEditing?:
-    | ((e: NativeSyntheticEvent<TextInputSubmitEditingEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputSubmitEditingEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called on new text input with the argument
@@ -692,8 +694,8 @@ export interface TextInputProps
    * This prop requires multiline={true} to be set.
    */
   onTextInput?:
-    | ((e: NativeSyntheticEvent<TextInputTextInputEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputTextInputEventData>) => void)
+  | undefined;
 
   /**
    * Invoked on content scroll with
@@ -702,8 +704,8 @@ export interface TextInputProps
    * May also contain other properties from ScrollEvent but on Android contentSize is not provided for performance reasons.
    */
   onScroll?:
-    | ((e: NativeSyntheticEvent<TextInputScrollEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputScrollEventData>) => void)
+  | undefined;
 
   /**
    * Callback that is called when a key is pressed.
@@ -715,8 +717,8 @@ export interface TextInputProps
    * Note: on Android only the inputs from soft keyboard are handled, not the hardware keyboard inputs.
    */
   onKeyPress?:
-    | ((e: NativeSyntheticEvent<TextInputKeyPressEventData>) => void)
-    | undefined;
+  | ((e: NativeSyntheticEvent<TextInputKeyPressEventData>) => void)
+  | undefined;
 
   /**
    * The string that will be rendered before text input has been entered
@@ -749,7 +751,7 @@ export interface TextInputProps
    * The start and end of the text input's selection. Set start and end to
    * the same value to position the cursor.
    */
-  selection?: {start: number; end?: number | undefined} | undefined;
+  selection?: { start: number; end?: number | undefined } | undefined;
 
   /**
    * The highlight (and cursor on ios) color of the text input
@@ -833,7 +835,7 @@ interface TextInputState {
 /**
  * @see https://reactnative.dev/docs/textinput#methods
  */
-declare class TextInputComponent extends React.Component<TextInputProps> {}
+declare class TextInputComponent extends React.Component<TextInputProps> { }
 declare const TextInputBase: Constructor<NativeMethods> &
   Constructor<TimerMixin> &
   typeof TextInputComponent;
diff --git a/node_modules/react-native/Libraries/Core/ExceptionsManager.js b/node_modules/react-native/Libraries/Core/ExceptionsManager.js
index 4616569..9e93db5 100644
--- a/node_modules/react-native/Libraries/Core/ExceptionsManager.js
+++ b/node_modules/react-native/Libraries/Core/ExceptionsManager.js
@@ -10,8 +10,8 @@
 
 'use strict';
 
-import type {ExtendedError} from './ExtendedError';
-import type {ExceptionData} from './NativeExceptionsManager';
+import type { ExtendedError } from './ExtendedError';
+import type { ExceptionData } from './NativeExceptionsManager';
 
 class SyntheticError extends Error {
   name: string = '';
@@ -155,7 +155,7 @@ function handleException(e: mixed, isFatal: boolean) {
  * LTI update could not be added via codemod */
 function reactConsoleErrorHandler(...args) {
   // bubble up to any original handlers
-  console._errorOriginal(...args);
+  // console._errorOriginal(...args);
   if (!console.reportErrorsAsExceptions) {
     return;
   }
diff --git a/node_modules/react-native/Libraries/Image/Image.d.ts b/node_modules/react-native/Libraries/Image/Image.d.ts
index dd2c089..e10d90e 100644
--- a/node_modules/react-native/Libraries/Image/Image.d.ts
+++ b/node_modules/react-native/Libraries/Image/Image.d.ts
@@ -8,15 +8,15 @@
  */
 
 import * as React from 'react';
-import {Constructor} from '../../types/private/Utilities';
-import {AccessibilityProps} from '../Components/View/ViewAccessibility';
-import {Insets} from '../../types/public/Insets';
-import {NativeMethods} from '../../types/public/ReactNativeTypes';
-import {StyleProp} from '../StyleSheet/StyleSheet';
-import {ImageStyle, ViewStyle} from '../StyleSheet/StyleSheetTypes';
-import {LayoutChangeEvent, NativeSyntheticEvent} from '../Types/CoreEventTypes';
-import {ImageResizeMode} from './ImageResizeMode';
-import {ImageRequireSource, ImageURISource} from './ImageSource';
+import { Constructor } from '../../types/private/Utilities';
+import { AccessibilityProps } from '../Components/View/ViewAccessibility';
+import { Insets } from '../../types/public/Insets';
+import { NativeMethods } from '../../types/public/ReactNativeTypes';
+import { StyleProp } from '../StyleSheet/StyleSheet';
+import { ImageStyle, ViewStyle } from '../StyleSheet/StyleSheetTypes';
+import { LayoutChangeEvent, NativeSyntheticEvent } from '../Types/CoreEventTypes';
+import { ImageResizeMode } from './ImageResizeMode';
+import { ImageRequireSource, ImageURISource } from './ImageSource';
 
 /**
  * @see ImagePropsIOS.onProgress
@@ -45,8 +45,8 @@ export interface ImagePropsIOS {
    * Invoked on download progress with {nativeEvent: {loaded, total}}
    */
   onProgress?:
-    | ((event: NativeSyntheticEvent<ImageProgressEventDataIOS>) => void)
-    | undefined;
+  | ((event: NativeSyntheticEvent<ImageProgressEventDataIOS>) => void)
+  | undefined;
 
   /**
    * Invoked when a partial load of the image is complete. The definition of
@@ -116,8 +116,8 @@ export interface ImageResolvedAssetSource {
  */
 export interface ImagePropsBase
   extends ImagePropsIOS,
-    ImagePropsAndroid,
-    AccessibilityProps {
+  ImagePropsAndroid,
+  AccessibilityProps {
   /**
    * Used to reference react managed images from native code.
    */
@@ -136,16 +136,16 @@ export interface ImagePropsBase
    * Invoked on load error with {nativeEvent: {error}}
    */
   onError?:
-    | ((error: NativeSyntheticEvent<ImageErrorEventData>) => void)
-    | undefined;
+  | ((error: NativeSyntheticEvent<ImageErrorEventData>) => void)
+  | undefined;
 
   /**
    * Invoked when load completes successfully
    * { source: { uri, height, width } }.
    */
   onLoad?:
-    | ((event: NativeSyntheticEvent<ImageLoadEventData>) => void)
-    | undefined;
+  | ((event: NativeSyntheticEvent<ImageLoadEventData>) => void)
+  | undefined;
 
   /**
    * Invoked when load either succeeds or fails
@@ -193,6 +193,8 @@ export interface ImagePropsBase
    */
   resizeMode?: ImageResizeMode | undefined;
 
+  children?: any
+
   /**
    * The mechanism that should be used to resize the image when the image's dimensions
    * differ from the image view's dimensions. Defaults to `auto`.
@@ -264,7 +266,7 @@ export interface ImageProps extends ImagePropsBase {
   style?: StyleProp<ImageStyle> | undefined;
 }
 
-declare class ImageComponent extends React.Component<ImageProps> {}
+declare class ImageComponent extends React.Component<ImageProps> { }
 declare const ImageBase: Constructor<NativeMethods> & typeof ImageComponent;
 export class Image extends ImageBase {
   static getSize(
@@ -274,7 +276,7 @@ export class Image extends ImageBase {
   ): any;
   static getSizeWithHeaders(
     uri: string,
-    headers: {[index: string]: string},
+    headers: { [index: string]: string },
     success: (width: number, height: number) => void,
     failure?: (error: any) => void,
   ): any;
@@ -287,7 +289,7 @@ export class Image extends ImageBase {
   static abortPrefetch?(requestId: number): void;
   static queryCache?(
     urls: string[],
-  ): Promise<{[url: string]: 'memory' | 'disk' | 'disk/memory'}>;
+  ): Promise<{ [url: string]: 'memory' | 'disk' | 'disk/memory' }>;
 
   /**
    * @see https://reactnative.dev/docs/image#resolveassetsource
@@ -304,7 +306,7 @@ export interface ImageBackgroundProps extends ImagePropsBase {
   imageRef?(image: Image): void;
 }
 
-declare class ImageBackgroundComponent extends React.Component<ImageBackgroundProps> {}
+declare class ImageBackgroundComponent extends React.Component<ImageBackgroundProps> { }
 declare const ImageBackgroundBase: Constructor<NativeMethods> &
   typeof ImageBackgroundComponent;
 export class ImageBackground extends ImageBackgroundBase {
@@ -318,5 +320,5 @@ export class ImageBackground extends ImageBackgroundBase {
   abortPrefetch?(requestId: number): void;
   queryCache?(
     urls: string[],
-  ): Promise<{[url: string]: 'memory' | 'disk' | 'disk/memory'}>;
+  ): Promise<{ [url: string]: 'memory' | 'disk' | 'disk/memory' }>;
 }
diff --git a/node_modules/react-native/Libraries/LogBox/LogBox.js b/node_modules/react-native/Libraries/LogBox/LogBox.js
index a597ca5..2679db2 100644
--- a/node_modules/react-native/Libraries/LogBox/LogBox.js
+++ b/node_modules/react-native/Libraries/LogBox/LogBox.js
@@ -8,13 +8,13 @@
  * @format
  */
 
-import type {IgnorePattern, LogData} from './Data/LogBoxData';
-import type {ExtendedExceptionData} from './Data/parseLogBoxLog';
+import type { IgnorePattern, LogData } from './Data/LogBoxData';
+import type { ExtendedExceptionData } from './Data/parseLogBoxLog';
 
 import Platform from '../Utilities/Platform';
 import RCTLog from '../Utilities/RCTLog';
 
-export type {LogData, ExtendedExceptionData, IgnorePattern};
+export type { LogData, ExtendedExceptionData, IgnorePattern };
 
 let LogBox;
 
@@ -23,10 +23,10 @@ interface ILogBox {
   uninstall(): void;
   isInstalled(): boolean;
   ignoreLogs($ReadOnlyArray<IgnorePattern>): void;
-  ignoreAllLogs(?boolean): void;
-  clearAllLogs(): void;
-  addLog(log: LogData): void;
-  addException(error: ExtendedExceptionData): void;
+ignoreAllLogs(?boolean): void;
+clearAllLogs(): void;
+addLog(log: LogData): void;
+addException(error: ExtendedExceptionData): void;
 }
 
 /**
@@ -34,7 +34,7 @@ interface ILogBox {
  */
 if (__DEV__) {
   const LogBoxData = require('./Data/LogBoxData');
-  const {parseLogBoxLog, parseInterpolation} = require('./Data/parseLogBoxLog');
+  const { parseLogBoxLog, parseInterpolation } = require('./Data/parseLogBoxLog');
 
   let originalConsoleError;
   let originalConsoleWarn;
@@ -145,12 +145,12 @@ if (__DEV__) {
       return;
     } else {
       // Be sure to pass LogBox warnings through.
-      originalConsoleWarn(...args);
+      // originalConsoleWarn(...args);
     }
 
     try {
       if (!isRCTLogAdviceWarning(...args)) {
-        const {category, message, componentStack} = parseLogBoxLog(args);
+        const { category, message, componentStack } = parseLogBoxLog(args);
 
         if (!LogBoxData.isMessageIgnored(message.content)) {
           LogBoxData.addLog({
@@ -203,7 +203,7 @@ if (__DEV__) {
 
       // Unfortunately, we need to add the Warning: prefix back for downstream dependencies.
       args[0] = `Warning: ${filterResult.finalFormat}`;
-      const {category, message, componentStack} = parseLogBoxLog(args);
+      const { category, message, componentStack } = parseLogBoxLog(args);
 
       // Interpolate the message so they are formatted for adb and other CLIs.
       // This is different than the message.content above because it includes component stacks.
diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
index 250299b..f54ea4c 100644
--- a/node_modules/react-native/react.gradle
+++ b/node_modules/react-native/react.gradle
@@ -263,6 +263,21 @@ afterEvaluate {
                 jsSourceMapsDir.deleteDir()
                 jsSourceMapsDir.mkdirs()
             }
+            doLast {
+    def moveFunc = { resSuffix ->
+        File originalDir = file("${resourcesDir}/drawable-${resSuffix}");
+        if (originalDir.exists()) {
+            File destDir = file("$buildDir/../src/main/res/drawable-${resSuffix}");
+            ant.move(file: originalDir, tofile: destDir);
+        }
+    }
+    moveFunc.curry("ldpi").call()
+    moveFunc.curry("mdpi").call()
+    moveFunc.curry("hdpi").call()
+    moveFunc.curry("xhdpi").call()
+    moveFunc.curry("xxhdpi").call()
+    moveFunc.curry("xxxhdpi").call()
+}
 
             // Set up inputs and outputs so gradle can cache the result
             inputs.files fileTree(dir: reactRoot, excludes: inputExcludes)
@@ -330,6 +345,21 @@ afterEvaluate {
                             }
                         }
                     }
+
+    def moveFunc = { resSuffix ->
+        File originalDir = file("${resourcesDir}/drawable-${resSuffix}");
+        if (originalDir.exists()) {
+            File destDir = file("$buildDir/../src/main/res/drawable-${resSuffix}");
+            ant.move(file: originalDir, tofile: destDir);
+        }
+    }
+    moveFunc.curry("ldpi").call()
+    moveFunc.curry("mdpi").call()
+    moveFunc.curry("hdpi").call()
+    moveFunc.curry("xhdpi").call()
+    moveFunc.curry("xxhdpi").call()
+    moveFunc.curry("xxxhdpi").call()
+
                 }
             }
 
diff --git a/node_modules/react-native/scripts/.packager.env b/node_modules/react-native/scripts/.packager.env
new file mode 100644
index 0000000..361f5fb
--- /dev/null
+++ b/node_modules/react-native/scripts/.packager.env
@@ -0,0 +1 @@
+export RCT_METRO_PORT=8081
diff --git a/node_modules/react-native/sdks/hermes/hermes-engine.podspec b/node_modules/react-native/sdks/hermes/hermes-engine.podspec
new file mode 100644
index 0000000..b800547
--- /dev/null
+++ b/node_modules/react-native/sdks/hermes/hermes-engine.podspec
@@ -0,0 +1,143 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+require "json"
+require_relative "./hermes-utils.rb"
+
+react_native_path = File.join(__dir__, "..", "..")
+
+# Whether Hermes is built for Release or Debug is determined by the PRODUCTION envvar.
+build_type = ENV['PRODUCTION'] == "1" ? :release : :debug
+
+# package.json
+package = JSON.parse(File.read(File.join(react_native_path, "package.json")))
+version = package['version']
+
+# sdks/.hermesversion
+hermestag_file = File.join(react_native_path, "sdks", ".hermesversion")
+isInCI = ENV['REACT_NATIVE_CI'] === 'true'
+
+source = {}
+git = "https://github.com/facebook/hermes.git"
+
+isInMain = version.include?('1000.0.0')
+isNightly = version.start_with?('0.0.0-')
+
+if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
+  if !File.exist?(ENV['HERMES_ENGINE_TARBALL_PATH'])
+    abort "[Hermes] HERMES_ENGINE_TARBALL_PATH is set, but points to a non-existing file: \"#{ENV['HERMES_ENGINE_TARBALL_PATH']}\"\nIf you don't want to use tarball, run `unset HERMES_ENGINE_TARBALL_PATH`"
+  end
+end
+
+if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
+  Pod::UI.puts "[Hermes] Using pre-built Hermes binaries from local path: #{ENV['HERMES_ENGINE_TARBALL_PATH']}".yellow if Object.const_defined?("Pod::UI")
+  source[:http] = "file://#{ENV['HERMES_ENGINE_TARBALL_PATH']}"
+elsif isInMain
+  Pod::UI.puts '[Hermes] Installing hermes-engine may take slightly longer, building Hermes compiler from source...'.yellow if Object.const_defined?("Pod::UI")
+  source[:git] = git
+  source[:commit] = `git ls-remote https://github.com/facebook/hermes main | cut -f 1`.strip
+elsif isNightly
+  Pod::UI.puts '[Hermes] Nightly version, download pre-built for Hermes'.yellow if Object.const_defined?("Pod::UI")
+  destination_path = download_nightly_hermes(react_native_path, version)
+  # set tarball as hermes engine
+  source[:http] = "file://#{destination_path}"
+elsif File.exist?(hermestag_file) && isInCI
+  Pod::UI.puts '[Hermes] Detected that you are on a React Native release branch, building Hermes from source but fetched from tag...'.yellow if Object.const_defined?("Pod::UI")
+  hermestag = File.read(hermestag_file).strip
+  source[:git] = git
+  source[:tag] = hermestag
+else
+  # Sample url from Maven:
+  # https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/0.71.0/react-native-artifacts-0.71.0-hermes-ios-debug.tar.gz
+  source[:http] = "https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/#{version}/react-native-artifacts-#{version}-hermes-ios-#{build_type.to_s}.tar.gz"
+end
+
+Pod::Spec.new do |spec|
+  spec.name        = "hermes-engine"
+  spec.version     = version
+  spec.summary     = "Hermes is a small and lightweight JavaScript engine optimized for running React Native."
+  spec.description = "Hermes is a JavaScript engine optimized for fast start-up of React Native apps. It features ahead-of-time static optimization and compact bytecode."
+  spec.homepage    = "https://hermesengine.dev"
+  spec.license     = package['license']
+  spec.author      = "Facebook"
+  spec.source      = source
+  spec.platforms   = { :osx => "10.13", :ios => "12.4" }
+
+  spec.preserve_paths      = '**/*.*'
+  spec.source_files        = ''
+
+  spec.xcconfig = {
+                    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
+                    "CLANG_CXX_LIBRARY" => "compiler-default"
+                  }.merge!(build_type == :debug ? { "GCC_PREPROCESSOR_DEFINITIONS" => "HERMES_ENABLE_DEBUGGER=1" } : {})
+
+  if source[:http] then
+
+    spec.subspec 'Pre-built' do |ss|
+      ss.preserve_paths = ["destroot/bin/*"].concat(build_type == :debug ? ["**/*.{h,c,cpp}"] : [])
+      ss.source_files = "destroot/include/**/*.h"
+      ss.exclude_files = ["destroot/include/jsi/jsi/JSIDynamic.{h,cpp}", "destroot/include/jsi/jsi/jsilib-*.{h,cpp}"]
+      ss.header_mappings_dir = "destroot/include"
+      ss.ios.vendored_frameworks = "destroot/Library/Frameworks/universal/hermes.xcframework"
+      ss.osx.vendored_frameworks = "destroot/Library/Frameworks/macosx/hermes.framework"
+    end
+
+  elsif source[:git] then
+
+    spec.subspec 'Hermes' do |ss|
+      ss.source_files = ''
+      ss.public_header_files = 'API/hermes/*.h'
+      ss.header_dir = 'hermes'
+    end
+
+    spec.subspec 'JSI' do |ss|
+      ss.source_files = ''
+      ss.public_header_files = 'API/jsi/jsi/*.h'
+      ss.header_dir = 'jsi'
+    end
+
+    spec.subspec 'Public' do |ss|
+      ss.source_files = ''
+      ss.public_header_files = 'public/hermes/Public/*.h'
+      ss.header_dir = 'hermes/Public'
+    end
+
+    hermesc_path = ""
+
+    if ENV.has_key?('HERMES_OVERRIDE_HERMESC_PATH') && File.exist?(ENV['HERMES_OVERRIDE_HERMESC_PATH']) then
+      hermesc_path = ENV['HERMES_OVERRIDE_HERMESC_PATH']
+    else
+      # Keep hermesc_path synchronized with .gitignore entry.
+      ENV['REACT_NATIVE_PATH'] = react_native_path
+      hermesc_path = "${REACT_NATIVE_PATH}/sdks/hermes-engine/build_host_hermesc"
+      # NOTE: Prepare command is not run  if the pod is not downloaded.
+      spec.prepare_command = ". #{react_native_path}/sdks/hermes-engine/utils/build-hermesc-xcode.sh #{hermesc_path}"
+    end
+
+    spec.user_target_xcconfig = {
+      'FRAMEWORK_SEARCH_PATHS' => '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/iphoneos" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/iphonesimulator" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/macosx" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/catalyst"',
+      'OTHER_LDFLAGS' => '-framework "hermes"',
+      'HERMES_CLI_PATH' => "#{hermesc_path}/bin/hermesc"
+    }
+
+    spec.script_phases = [
+      {
+        :name => 'Build Hermes',
+        :script => <<-EOS
+        . ${PODS_ROOT}/../.xcode.env
+        export CMAKE_BINARY=${CMAKE_BINARY:-#{%x(command -v cmake | tr -d '\n')}}
+        . ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/build-hermes-xcode.sh #{version} #{hermesc_path}/ImportHermesc.cmake
+        EOS
+      },
+      {
+        :name => 'Copy Hermes Framework',
+        :script => ". ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/copy-hermes-xcode.sh"
+      }
+    ]
+  end
+end
diff --git a/node_modules/react-native/sdks/hermes/hermes-utils.rb b/node_modules/react-native/sdks/hermes/hermes-utils.rb
new file mode 100644
index 0000000..0842496
--- /dev/null
+++ b/node_modules/react-native/sdks/hermes/hermes-utils.rb
@@ -0,0 +1,26 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+require 'net/http'
+require 'rexml/document'
+
+# This function downloads the nightly prebuilt version of Hermes based on the passed version
+# and save it in the node_module/react_native/sdks/downloads folder
+# It then returns the path to the hermes tarball
+#
+# Parameters
+# - react_native_path: the path to the React Native folder in node modules. It is used as root path to store the Hermes tarball
+# - version: the version of React Native that requires the Hermes tarball
+# Returns: the path to the downloaded Hermes tarball
+def download_nightly_hermes(react_native_path, version)
+    params = "r=snapshots\&g=com.facebook.react\&a=react-native-artifacts\&c=hermes-ios-debug\&e=tar.gz\&v=#{version}-SNAPSHOT"
+    tarball_url = "http://oss.sonatype.org/service/local/artifact/maven/redirect\?#{params}"
+
+    destination_folder = "#{react_native_path}/sdks/downloads"
+    destination_path = "#{destination_folder}/hermes-ios.tar.gz"
+
+    `mkdir -p "#{destination_folder}" && curl "#{tarball_url}" -Lo "#{destination_path}"`
+    return destination_path
+end
